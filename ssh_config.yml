---
- name: Connect to remote machine via SSH with a specific username and password
  hosts: openstack-vm-test
  gather_facts: no
  vars_files:
    - /home/dinho/automation/passwd.yml
  vars:
    ssh_username: stack
    ansible_ssh_private_key_file: /home/dinho/.ssh/id_rsa.pub
    ansible_become_pass: "{{ openstack_vm }}"
    ansible_ssh_pass: "{{ openstack_vm }}"
  tasks:
    - name: allow ssh_key for stack
      ansible.builtin.shell:
        cmd: "/usr/bin/sshpass -p {{ openstack_vm }} ssh-copy-id -i /home/dinho/.ssh/id_rsa.pub -o StrictHostKeyChecking=no {{ ssh_username }}@openstack-vm-test"
      ignore_errors: true
      register: ssh_copy_check
      delegate_to: localhost
    - name: checking ssh-copy output
      ansible.builtin.debug:
        msg: "ssh-copy command output {{ ssh_copy_check.failed }}"
    - name: exectute ssh
      ansible.builtin.shell:
        cmd: ssh-keygen -f "/home/dinho/.ssh/known_hosts" -R "openstack-vm-test"
      when: ssh_copy_check.failed == True
      delegate_to: localhost
      #register: ssh_copy_check
    - name: allow ssh_key based auth
      ansible.builtin.shell:
        cmd: "/usr/bin/sshpass -p {{ openstack_vm }} ssh-copy-id -i /home/dinho/.ssh/id_rsa.pub -o StrictHostKeyChecking=no {{ ssh_username }}@openstack-vm-test"
      ignore_errors: true
      when: ssh_copy_check.failed != "False"
      register: ssh_copy_check
      delegate_to: localhost
    - name: Check connectivity
      ansible.builtin.ping:
      delegate_to: localhost
    - name: Allow 'stack' user to have passwordless sudo access
      become: yes
      become_method: sudo
      remote_user: stack
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: stack
        line: "stack ALL=(ALL) NOPASSWD: ALL"
